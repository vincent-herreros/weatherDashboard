var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.3,1,0.652]],["body/components/AppComponent.html",[0,0.5,1,1.03,2,0.723,3,0.588,4,1.306,5,1.306,6,1.306,7,1.306,8,0.47,9,1.623,10,1.306,11,2.407,12,1.622,13,2.273,14,1.829,15,3.401,16,1.829,17,2.947,18,0.723,19,1.829,20,4.02,21,1.829,22,0.88,23,0.075,24,1.069,25,1.069,26,2.273,27,1.069,28,2.104,29,0.723,30,0.588,31,0.588,32,0.723,33,2.947,34,1.829,35,1.728,36,0.88,37,1.829,38,1.829,39,1.829,40,2.287,41,1.306,42,1.012,43,1.306,44,0.47,45,1.306,46,0.47,47,1.306,48,0.048,49,0.048]],["title/modules/AppModule.html",[50,0.652,51,1.185]],["body/modules/AppModule.html",[1,1.205,2,0.631,3,0.513,8,0.41,12,0.768,23,0.076,29,1.465,30,0.513,31,0.747,32,0.631,36,0.768,42,0.631,44,0.858,46,0.858,48,0.044,49,0.044,50,0.747,51,2.212,52,0.933,53,2.431,54,2.431,55,2.062,56,1.416,57,1.416,58,1.416,59,1.416,60,1.606,61,2.062,62,1.416,63,1.139,64,1.836,65,2.673,66,1.416,67,1.139,68,2.062,69,2.673,70,1.416,71,2.673,72,1.416,73,1.836,74,1.416,75,1.416,76,1.836,77,1.836,78,1.836,79,0.933,80,0.933,81,0.933,82,1.836,83,1.836,84,1.836,85,1.836,86,1.836,87,1.836]],["title/modules/AppRoutingModule.html",[50,0.652,60,0.976]],["body/modules/AppRoutingModule.html",[0,0.434,2,0.88,3,0.715,8,0.572,23,0.076,29,1.426,30,0.715,31,0.941,32,0.88,34,2.09,35,1.301,44,0.752,46,0.752,48,0.055,49,0.055,50,0.715,60,1.408,68,2.597,74,1.975,75,1.975,88,2.56,89,2.56,90,3.367,91,1.911,92,1.975,93,1.975,94,3.761,95,2.56,96,2.56,97,2.56,98,2.56]],["title/components/DashboardComponent.html",[0,0.3,44,0.521]],["body/components/DashboardComponent.html",[0,0.432,1,0.323,2,0.643,3,0.323,4,0.718,5,0.718,6,0.718,7,0.718,8,0.258,10,0.718,11,1.849,12,1.246,14,1.162,16,1.162,18,0.397,19,1.162,21,2.083,22,1.334,23,0.077,24,1.199,25,1.199,27,1.62,29,0.81,30,0.323,31,0.323,32,0.397,34,1.683,35,0.952,36,0.484,37,1.162,38,1.162,39,1.162,40,1.683,41,0.718,42,0.932,43,0.718,44,0.606,45,0.718,46,0.258,47,0.718,48,0.03,49,0.03,79,0.588,80,1.835,81,0.588,99,0.892,100,1.162,101,2.712,102,1.444,103,1.82,104,2.359,105,1.873,106,2.459,107,2.459,108,1.162,109,2.092,110,1.873,111,0.718,112,1.157,113,1.62,114,1.157,115,1.444,116,1.444,117,1.157,118,1.873,119,1.873,120,1.444,121,1.873,122,1.162,123,0.952,124,1.162,125,1.444,126,1.873,127,1.157,128,1.873,129,1.444,130,1.873,131,2.979,132,2.712,133,1.873,134,1.157,135,1.157,136,1.157,137,1.157,138,1.157,139,1.157,140,1.873,141,1.157,142,1.873,143,1.157,144,0.892,145,1.157,146,1.157,147,1.157,148,1.157,149,1.157,150,1.157,151,1.157,152,1.157,153,1.157,154,1.157,155,1.157,156,1.157,157,1.444,158,1.157,159,1.157,160,1.157,161,1.157,162,1.157,163,0.892,164,1.157,165,1.157,166,1.157,167,1.157,168,1.157,169,1.157,170,1.157,171,1.157,172,1.157,173,1.157,174,1.157,175,0.892,176,1.157,177,1.157,178,1.157,179,1.157,180,1.444]],["title/components/SettingComponent.html",[0,0.3,46,0.521]],["body/components/SettingComponent.html",[0,0.514,1,0.524,2,0.644,3,0.524,4,1.163,5,1.163,6,1.163,7,1.163,8,0.419,10,1.163,11,2.303,12,1.552,14,1.684,16,1.684,18,0.644,23,0.075,27,1.379,29,0.644,30,0.524,31,0.524,32,0.644,35,1.885,36,0.784,37,1.684,38,1.684,39,1.684,40,2.17,41,1.163,42,0.932,43,1.163,44,0.419,45,1.163,46,0.781,47,1.163,48,0.044,49,0.044,81,1.777,100,1.163,102,2.093,103,2.46,108,1.684,109,2.697,111,1.98,124,1.163,125,1.446,180,2.093,181,1.446,182,2.714,183,2.093,184,2.093,185,3.19,186,2.714,187,1.874,188,1.874,189,2.714,190,2.714,191,2.714,192,3.496,193,2.714,194,2.714,195,1.874,196,1.874]],["title/injectables/WeatherService.html",[113,1.185,197,1.185]],["body/injectables/WeatherService.html",[2,0.646,3,0.526,8,0.42,13,1.451,18,0.646,19,1.689,21,1.689,22,1.138,23,0.076,24,0.956,25,0.956,27,1.624,29,1.098,30,0.526,31,0.526,32,0.646,42,0.935,48,0.044,49,0.044,72,1.451,80,1.78,93,1.451,100,1.689,106,3.081,107,2.098,108,1.689,111,1.167,113,1.382,115,2.098,116,2.098,120,2.465,124,1.689,144,1.451,175,1.451,183,2.098,197,1.624,198,1.451,199,2.721,200,3.196,201,3.502,202,1.881,203,3.502,204,1.881,205,2.721,206,1.881,207,1.881,208,3.716,209,2.721,210,2.721,211,2.721,212,1.881,213,3.502,214,1.881,215,1.881,216,1.451,217,1.881,218,1.881,219,1.881,220,1.881]],["title/coverage.html",[221,2.44]],["body/coverage.html",[0,0.503,1,0.775,8,0.62,9,2.14,22,1.16,23,0.073,44,0.62,46,0.62,48,0.058,49,0.058,99,2.14,113,1.41,122,1.722,123,1.802,181,2.14,197,1.41,198,2.14,221,2.14,222,2.774,223,2.774,224,2.774,225,3.909,226,2.774,227,2.774,228,2.774,229,2.774,230,2.774,231,2.774,232,2.774,233,2.14,234,2.735,235,3.546,236,2.14,237,2.774,238,2.774]],["title/dependencies.html",[52,1.423,239,1.957]],["body/dependencies.html",[23,0.076,30,0.744,48,0.056,49,0.056,52,1.353,66,2.664,67,2.144,70,2.054,79,1.353,80,1.353,81,1.353,92,2.054,216,2.664,240,2.663,241,4.492,242,2.663,243,2.663,244,2.663,245,2.663,246,2.663,247,2.663,248,2.663,249,2.663,250,2.663,251,2.663,252,3.454,253,2.663,254,2.663,255,2.663]],["title/index.html",[18,0.672,256,1.957,257,1.957]],["body/index.html",[0,0.451,3,0.623,8,0.498,12,0.932,23,0.05,26,1.718,42,0.765,48,0.05,49,0.05,63,1.383,79,1.781,122,1.383,129,1.718,184,2.704,258,3.066,259,3.776,260,3.505,261,2.228,262,2.228,263,2.228,264,3.066,265,4.192,266,4.192,267,2.228,268,2.228,269,2.228,270,2.228,271,2.228,272,2.228,273,2.228,274,2.228,275,2.228,276,2.228,277,3.959,278,2.228,279,2.228,280,2.228,281,2.228,282,2.228,283,2.228,284,1.718,285,3.066,286,3.959,287,3.066,288,3.066,289,2.228,290,3.776,291,2.228,292,2.228,293,2.228,294,3.505,295,2.228,296,2.228,297,2.228]],["title/modules.html",[50,0.884]],["body/modules.html",[23,0.065,48,0.065,49,0.065,50,0.948,51,1.725,60,1.42,67,2.106,298,3.394,299,3.394,300,4.015,301,3.394,302,3.394]],["title/overview.html",[303,2.44]],["body/overview.html",[0,0.338,1,1.221,23,0.071,31,0.733,36,1.097,44,0.85,46,0.85,48,0.056,49,0.056,50,0.956,51,2.313,52,1.333,53,2.024,54,2.024,55,2.024,56,2.024,57,2.024,58,2.024,59,2.024,60,1.592,61,2.638,62,2.024,63,1.628,91,1.333,197,1.333,303,2.024,304,2.624,305,3.421,306,2.624]],["title/routes.html",[91,1.607]],["body/routes.html",[23,0.068,48,0.068,49,0.068,91,1.83]],["title/miscellaneous/variables.html",[123,1.423,307,1.51]],["body/miscellaneous/variables.html",[18,1.005,22,1.535,23,0.075,24,1.864,25,1.864,48,0.06,49,0.06,123,1.487,157,2.257,163,2.257,233,2.257,234,3.405,236,2.257,284,2.83,307,2.257,308,2.927,309,2.927,310,4.201]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":225,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":306,"title":{},"body":{"overview.html":{}}}],["1.2.4",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":304,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["2.7.3",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":305,"title":{},"body":{"overview.html":{}}}],["3/4",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":153,"title":{},"body":{"components/DashboardComponent.html":{}}}],["33",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["347c57",{"_index":149,"title":{},"body":{"components/DashboardComponent.html":{}}}],["42",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["6.3.3",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["7.0.3",{"_index":262,"title":{},"body":{"index.html":{}}}],["75",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["84f974edf2647dbcd7666bc18332d9ac",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["action",{"_index":130,"title":{},"body":{"components/DashboardComponent.html":{}}}],["actual_compon",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["affect",{"_index":121,"title":{},"body":{"components/DashboardComponent.html":{}}}],["angular",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compil",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":92,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angularweatherwidgetmodul",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["angularweatherwidgetmodule.forroot",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":208,"title":{},"body":{"injectables/WeatherService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"index.html":{}}}],["app.compon",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":51,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":60,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifact",{"_index":278,"title":{},"body":{"index.html":{}}}],["auto",{"_index":155,"title":{},"body":{"components/DashboardComponent.html":{}}}],["automat",{"_index":271,"title":{},"body":{"index.html":{}}}],["avail",{"_index":302,"title":{},"body":{"modules.html":{}}}],["backgroundcolor",{"_index":148,"title":{},"body":{"components/DashboardComponent.html":{}}}],["baseurl",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["brows",{"_index":300,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":277,"title":{},"body":{"index.html":{}}}],["chang",{"_index":273,"title":{},"body":{"index.html":{}}}],["chart.j",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["check",{"_index":129,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["choisir",{"_index":191,"title":{},"body":{"components/SettingComponent.html":{}}}],["choos",{"_index":182,"title":{},"body":{"components/SettingComponent.html":{}}}],["citi",{"_index":106,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/WeatherService.html":{}}}],["citynam",{"_index":146,"title":{},"body":{"components/DashboardComponent.html":{}}}],["class",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{}}}],["cli",{"_index":260,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":274,"title":{},"body":{"index.html":{}}}],["color",{"_index":150,"title":{},"body":{"components/DashboardComponent.html":{}}}],["compat",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["console.log(data",{"_index":174,"title":{},"body":{"components/DashboardComponent.html":{}}}],["const",{"_index":93,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["constructor",{"_index":111,"title":{},"body":{"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(http",{"_index":202,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(priv",{"_index":144,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(weatherservic",{"_index":112,"title":{},"body":{"components/DashboardComponent.html":{}}}],["core",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":221,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["d'enlev",{"_index":195,"title":{},"body":{"components/SettingComponent.html":{}}}],["d\\'enlev",{"_index":196,"title":{},"body":{"components/SettingComponent.html":{}}}],["dashboard",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{}}}],["dashboard'},{'nam",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["dashboard.component.css",{"_index":104,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":105,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.compon",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboardcompon",{"_index":44,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data.id",{"_index":171,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data.weather[0].main",{"_index":173,"title":{},"body":{"components/DashboardComponent.html":{}}}],["de",{"_index":192,"title":{},"body":{"components/SettingComponent.html":{}}}],["declar",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{}}}],["depend",{"_index":52,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":100,"title":{},"body":{"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{}}}],["dev",{"_index":268,"title":{},"body":{"index.html":{}}}],["develop",{"_index":263,"title":{},"body":{"index.html":{}}}],["direct",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":276,"title":{},"body":{"index.html":{}}}],["directori",{"_index":281,"title":{},"body":{"index.html":{}}}],["display",{"_index":101,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dist",{"_index":280,"title":{},"body":{"index.html":{}}}],["document",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["dynam",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":291,"title":{},"body":{"index.html":{}}}],["element",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["en",{"_index":167,"title":{},"body":{"components/DashboardComponent.html":{}}}],["end",{"_index":290,"title":{},"body":{"index.html":{}}}],["environ",{"_index":234,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":132,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event.target.valu",{"_index":178,"title":{},"body":{"components/DashboardComponent.html":{}}}],["execut",{"_index":287,"title":{},"body":{"index.html":{}}}],["export",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["fals",{"_index":157,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["ffffff",{"_index":151,"title":{},"body":{"components/DashboardComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["flag",{"_index":283,"title":{},"body":{"index.html":{}}}],["forecastmod",{"_index":142,"title":{},"body":{"components/DashboardComponent.html":{}}}],["forecastmode.detail",{"_index":160,"title":{},"body":{"components/DashboardComponent.html":{}}}],["formsmodul",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":97,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":128,"title":{},"body":{"components/DashboardComponent.html":{}}}],["further",{"_index":293,"title":{},"body":{"index.html":{}}}],["gener",{"_index":259,"title":{},"body":{"index.html":{}}}],["get",{"_index":256,"title":{"index.html":{}},"body":{}}],["getidc",{"_index":120,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/WeatherService.html":{}}}],["getidcity(c",{"_index":206,"title":{},"body":{"injectables/WeatherService.html":{}}}],["go",{"_index":296,"title":{},"body":{"index.html":{}}}],["graph",{"_index":301,"title":{},"body":{"modules.html":{}}}],["height",{"_index":154,"title":{},"body":{"components/DashboardComponent.html":{}}}],["help",{"_index":294,"title":{},"body":{"index.html":{}}}],["html",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["http",{"_index":205,"title":{},"body":{"injectables/WeatherService.html":{}}}],["http://api.openweathermap.org/data/2.5",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:4200",{"_index":270,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":203,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpclientmodul",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":214,"title":{},"body":{"injectables/WeatherService.html":{}}}],["https://api.openweathermap.org/data/2.5/weath",{"_index":211,"title":{},"body":{"injectables/WeatherService.html":{}}}],["id",{"_index":107,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/WeatherService.html":{}}}],["identifi",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":102,"title":{},"body":{"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["import",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{}}}],["inject",{"_index":197,"title":{"injectables/WeatherService.html":{}},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":131,"title":{},"body":{"components/DashboardComponent.html":{}}}],["js",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":289,"title":{},"body":{"index.html":{}}}],["key",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["languag",{"_index":166,"title":{},"body":{"components/DashboardComponent.html":{}}}],["layout",{"_index":164,"title":{},"body":{"components/DashboardComponent.html":{}}}],["legend",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"overview.html":{}}}],["locat",{"_index":145,"title":{},"body":{"components/DashboardComponent.html":{}}}],["london",{"_index":133,"title":{},"body":{"components/DashboardComponent.html":{}}}],["map",{"_index":210,"title":{},"body":{"injectables/WeatherService.html":{}}}],["match",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["method",{"_index":108,"title":{},"body":{"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{}}}],["miscellan",{"_index":307,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modul",{"_index":50,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":295,"title":{},"body":{"index.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["navig",{"_index":269,"title":{},"body":{"index.html":{}}}],["new",{"_index":122,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":266,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":109,"title":{},"body":{"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["object",{"_index":310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":215,"title":{},"body":{"injectables/WeatherService.html":{}}}],["onchang",{"_index":137,"title":{},"body":{"components/DashboardComponent.html":{}}}],["oninit",{"_index":103,"title":{},"body":{"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["onkey",{"_index":110,"title":{},"body":{"components/DashboardComponent.html":{}}}],["onkey(ev",{"_index":126,"title":{},"body":{"components/DashboardComponent.html":{}}}],["open",{"_index":209,"title":{},"body":{"injectables/WeatherService.html":{}}}],["option",{"_index":116,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/WeatherService.html":{}}}],["ou",{"_index":194,"title":{},"body":{"components/SettingComponent.html":{}}}],["out",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":303,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":239,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":175,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/WeatherService.html":{}}}],["paramet",{"_index":115,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/WeatherService.html":{}}}],["path",{"_index":94,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":96,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pouvez",{"_index":190,"title":{},"body":{"components/SettingComponent.html":{}}}],["privat",{"_index":200,"title":{},"body":{"injectables/WeatherService.html":{}}}],["prod",{"_index":282,"title":{},"body":{"index.html":{}}}],["product",{"_index":284,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":258,"title":{},"body":{"index.html":{}}}],["properti",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/WeatherService.html":{}}}],["protractor",{"_index":292,"title":{},"body":{"index.html":{}}}],["provid",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":217,"title":{},"body":{"injectables/WeatherService.html":{}}}],["rajout",{"_index":193,"title":{},"body":{"components/SettingComponent.html":{}}}],["readm",{"_index":297,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":95,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reload",{"_index":272,"title":{},"body":{"index.html":{}}}],["reset",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respons",{"_index":119,"title":{},"body":{"components/DashboardComponent.html":{}}}],["result",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":124,"title":{},"body":{"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["root'},{'nam",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["rout",{"_index":91,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routermodul",{"_index":90,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":98,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":89,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":265,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":216,"title":{},"body":{"injectables/WeatherService.html":{},"dependencies.html":{}}}],["scaffold",{"_index":275,"title":{},"body":{"index.html":{}}}],["scale",{"_index":158,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["serv",{"_index":267,"title":{},"body":{"index.html":{}}}],["server",{"_index":264,"title":{},"body":{"index.html":{}}}],["servic",{"_index":199,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["setting.component.css",{"_index":185,"title":{},"body":{"components/SettingComponent.html":{}}}],["setting.component.html",{"_index":186,"title":{},"body":{"components/SettingComponent.html":{}}}],["setting/setting.compon",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["settingcompon",{"_index":46,"title":{"components/SettingComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"coverage.html":{},"overview.html":{}}}],["showdetail",{"_index":161,"title":{},"body":{"components/DashboardComponent.html":{}}}],["showforecast",{"_index":162,"title":{},"body":{"components/DashboardComponent.html":{}}}],["showwind",{"_index":156,"title":{},"body":{"components/DashboardComponent.html":{}}}],["simplechang",{"_index":138,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["src/.../environment.prod.t",{"_index":308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":88,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/dashboard/dashboard.component.t",{"_index":99,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:13",{"_index":114,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:40",{"_index":117,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:55",{"_index":127,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:60",{"_index":134,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:61",{"_index":135,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:62",{"_index":136,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/setting/setting.component.t",{"_index":181,"title":{},"body":{"components/SettingComponent.html":{},"coverage.html":{}}}],["src/app/setting/setting.component.ts:11",{"_index":187,"title":{},"body":{"components/SettingComponent.html":{}}}],["src/app/setting/setting.component.ts:15",{"_index":188,"title":{},"body":{"components/SettingComponent.html":{}}}],["src/app/weather.service.t",{"_index":198,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/weather.service.ts:11",{"_index":204,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather.service.ts:20",{"_index":212,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather.service.ts:26",{"_index":207,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/environments/environment.prod.t",{"_index":233,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":236,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":257,"title":{"index.html":{}},"body":{}}],["statement",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":279,"title":{},"body":{"index.html":{}}}],["string",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/WeatherService.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["subscribe(data",{"_index":169,"title":{},"body":{"components/DashboardComponent.html":{}}}],["support",{"_index":298,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":299,"title":{},"body":{"modules.html":{}}}],["szczecin",{"_index":147,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tabl",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["temperaturescal",{"_index":141,"title":{},"body":{"components/DashboardComponent.html":{}}}],["temperaturescale.celciu",{"_index":159,"title":{},"body":{"components/DashboardComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["test",{"_index":286,"title":{},"body":{"index.html":{}}}],["this.citi",{"_index":177,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.http.get(url",{"_index":220,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.id",{"_index":170,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.ngoninit",{"_index":179,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.weath",{"_index":172,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.weatherservice.getidcity(this.c",{"_index":168,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.weatherurl}?q=${city}&&appid=84f974edf2647dbcd7666bc18332d9ac",{"_index":219,"title":{},"body":{"injectables/WeatherService.html":{}}}],["titl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["true",{"_index":163,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":285,"title":{},"body":{"index.html":{}}}],["url",{"_index":213,"title":{},"body":{"injectables/WeatherService.html":{}}}],["us",{"_index":184,"title":{},"body":{"components/SettingComponent.html":{},"index.html":{}}}],["user",{"_index":183,"title":{},"body":{"components/SettingComponent.html":{},"injectables/WeatherService.html":{}}}],["valu",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["variabl",{"_index":123,"title":{"miscellaneous/variables.html":{}},"body":{"components/DashboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":261,"title":{},"body":{"index.html":{}}}],["via",{"_index":288,"title":{},"body":{"index.html":{}}}],["void",{"_index":125,"title":{},"body":{"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["vou",{"_index":189,"title":{},"body":{"components/SettingComponent.html":{}}}],["wait",{"_index":118,"title":{},"body":{"components/DashboardComponent.html":{}}}],["want",{"_index":180,"title":{},"body":{"components/DashboardComponent.html":{},"components/SettingComponent.html":{}}}],["weather",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["weather.servic",{"_index":139,"title":{},"body":{"components/DashboardComponent.html":{}}}],["weatherapinam",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["weatherapiname.open_weather_map",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["weatherdashboard",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["weatherlayout",{"_index":143,"title":{},"body":{"components/DashboardComponent.html":{}}}],["weatherlayout.wid",{"_index":165,"title":{},"body":{"components/DashboardComponent.html":{}}}],["weatherservic",{"_index":113,"title":{"injectables/WeatherService.html":{}},"body":{"components/DashboardComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["weatherset",{"_index":140,"title":{},"body":{"components/DashboardComponent.html":{}}}],["weatherurl",{"_index":201,"title":{},"body":{"injectables/WeatherService.html":{}}}],["web",{"_index":218,"title":{},"body":{"injectables/WeatherService.html":{}}}],["welcom",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["widget",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/SettingComponent.html":{},"dependencies.html":{}}}],["width",{"_index":152,"title":{},"body":{"components/DashboardComponent.html":{}}}],["without",{"_index":176,"title":{},"body":{"components/DashboardComponent.html":{}}}],["zone.j",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'weatherDashboard'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'weatherDashboard';\n}\n\n    \n\n    \n        \n\n  \n    Welcome to {{ title }}!\n  \n  \n    Dashboard\n    Settings\n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Welcome to {{ title }}!        Dashboard    Settings    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'SettingComponent', 'selector': 'app-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nSettingComponent\n\nSettingComponent\n\nAppModule -->\n\nSettingComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                DashboardComponent\n                            \n                            \n                                SettingComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SettingComponent } from './setting/setting.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AngularWeatherWidgetModule, WeatherApiName } from 'angular-weather-widget';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    SettingComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    AngularWeatherWidgetModule.forRoot({\n      key: \"84f974edf2647dbcd7666bc18332d9ac\",\n      name: WeatherApiName.OPEN_WEATHER_MAP,\n      baseUrl: 'http://api.openweathermap.org/data/2.5'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {SettingComponent} from './setting/setting.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  {path: 'dashboard', component: DashboardComponent},\n  {path: 'setting', component: SettingComponent}\n]\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        Dashboard component to display weather\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                id\n                            \n                            \n                                weather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            wait for the response of getIdCity and affect new variables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onKey\n                            \n                            \n                        \n                    \n                \n                \n                    \nonKey(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            function who check if there is any action on the input\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                event of the input\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        city:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"London\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weather\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weather:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:62\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnChanges, SimpleChanges, Input } from '@angular/core';\nimport { WeatherService } from '../weather.service';\nimport { WeatherSettings, TemperatureScale, ForecastMode, WeatherLayout } from 'angular-weather-widget';\n\n/**\n * Dashboard component to display weather\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private weatherService: WeatherService) { \n    \n  }\n\n  /*settings: WeatherSettings = {\n    location: {\n      cityName: 'Szczecin'\n    },\n    backgroundColor: '#347c57',\n    color: '#ffffff',\n    width: '300px',\n    height: 'auto',\n    showWind: false,\n    scale: TemperatureScale.CELCIUS,\n    forecastMode: ForecastMode.DETAILED,\n    showDetails: false,\n    showForecast: true,\n    layout: WeatherLayout.WIDE,\n    language: 'en'\n  };*/\n\n  /**\n   * wait for the response of getIdCity and affect new variables\n   * \n   */\n  ngOnInit() {\n    this.weatherService.getIdCity(this.city)\n      .subscribe(data => {\n        this.id = data.id;\n        this.weather = data.weather[0].main;  \n        console.log(data);\n      }\n        )\n      ;\n  }\n\n  /**\n   * function who check if there is any action on the input\n   * @param event event of the input\n   */\n  onKey(event: any) { // without type info\n    this.city = event.target.value;\n    this.ngOnInit();\n  }\n\n  city: string = \"London\";;\n  id = \"\";\n  weather = \"\";\n\n}\n\n    \n\n    \n        \n  City who want to display :\n    \n     -->\n  \n  {{weather}}    \n  -->\n  {{id}}\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  City who want to display :         -->    {{weather}}      -->  {{id}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'SettingComponent', 'selector': 'app-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingComponent.html":{"url":"components/SettingComponent.html","title":"component - SettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/setting/setting.component.ts\n\n\n    \n        Description\n    \n    \n        Setting component to choose which widget the user want to use.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-setting\n            \n\n            \n                styleUrls\n                ./setting.component.css\n            \n\n\n\n            \n                templateUrl\n                ./setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/setting/setting.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/setting/setting.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Setting component to choose which widget the user want to use.\n */\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.component.html',\n  styleUrls: ['./setting.component.css']\n})\nexport class SettingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Vous pouvez choisir de rajouter ou d'enlever des widgets\n\n\n  \n    \n  \n\n    \n\n    \n                \n                    ./setting.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Vous pouvez choisir de rajouter ou d\\'enlever des widgets        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'SettingComponent', 'selector': 'app-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Weather service\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                weatherUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIdCity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIdCity\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIdCity(city)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            get the id of the city with the API of open weather map\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        city\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                city of the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            weatherUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://api.openweathermap.org/data/2.5/weather'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather.service.ts:20\n                            \n                        \n\n                \n                    \n                        Url for the API\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n/**\n * Weather service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  constructor(private http: HttpClient) { \n\n  }\n\n  /**\n   * Url for the API\n   */\n  private weatherUrl = 'https://api.openweathermap.org/data/2.5/weather';  // URL to web api\n\n  /**\n   * get the id of the city with the API of open weather map\n   * @param city city of the user\n   */\n  getIdCity (city): any {\n    const url = `${this.weatherUrl}?q=${city}&&APPID=84f974edf2647dbcd7666bc18332d9ac`;\n    return this.http.get(url);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/setting/setting.component.ts\n            \n            \n                component\n            \n            \n                SettingComponent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.0.0\n        \n            @angular/common : ~7.0.0\n        \n            @angular/compiler : ~7.0.0\n        \n            @angular/core : ~7.0.0\n        \n            @angular/forms : ~7.0.0\n        \n            @angular/http : ~7.0.0\n        \n            @angular/platform-browser : ~7.0.0\n        \n            @angular/platform-browser-dynamic : ~7.0.0\n        \n            @angular/router : ~7.0.0\n        \n            angular-weather-widget : ^1.2.4\n        \n            chart.js : ^2.7.3\n        \n            core-js : ^2.5.4\n        \n            rxjs : ~6.3.3\n        \n            rxjs-compat : ^6.3.3\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWeatherDashboard\nThis project was generated with Angular CLI version 7.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nSettingComponent\n\nSettingComponent\n\nAppModule -->\n\nSettingComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
